---------------------------20180818----------------------------------------------
·下面sql中第一句是错误的，后面两句是对的，原因在于第一句会导致"表名"和"where"两个词之间缺少空格而连接在一起
    sql = "select `quote` from %s" % cls.__exStorage__ + "where `data_hash` = %s"
    sql = "select `quote` from %s " % cls.__exStorage__ + "where `data_hash` = %s"
    sql = "select `quote` from %s" % cls.__exStorage__ + " where `data_hash` = %s"


    yield from cur.execute(sql, (ex))
---------------------------20180818----------------------------------------------
---------------------------20180817----------------------------------------------
·对于一个数据集，对其遍历一遍，可以改变其组织结构形式。例如，对树状的Object结构，
    我再向数据库写入的时候，通过递归遍历，把他改变成每个mate一行的平行结构。同理，我在
    从数据库中取出这个对象的时候，通过遍历，我可以把平行结构逆向还原成树状结构。
    实例如下：
       orm.py 中的create_rows函数
       orm.py 中的cls方法的get_obj函数
---------------------------20180817----------------------------------------------
        """
            tips_SF:这里返回json字串中，每一个键和非Object非Array的值，必须用双引号，整个字符串用单引号包裹，
            下面的样子会导致解析错误
            return "{'..remark': {'algorithm': 'algorithm', 'ele': 'lll', 'theta': 'theta'},'colon equals': {'..remark': 'to denote setting a variable on the left hand side','style': ':='}, 'gradient': 'gradient descent', 'notation': {'colon': ':'}}"
        """
---------------------------20180817----------------------------------------------
---------------------------20180814----------------------------------------------
··aiomysql pymysql
    在拼接sql查询语句的时候，table的名字不能够作为查询的参数，必须提前在查询语句
    中用字串拼接好
---------------------------20180814----------------------------------------------
---------------------------20180814----------------------------------------------

